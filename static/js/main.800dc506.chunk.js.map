{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","fetch","then","res","json","getTodos","TodoList","_ref","todos","selectedTodo","setSelectedTodo","setSelectedUser","setModalLoading","handleOpenModal","newTodo","setTimeout","userId","concat","finally","_jsxs","className","children","_jsx","map","todo","classNames","id","completed","title","onClick","type","TodoFilter","filter","setFilter","search","setSearch","value","onChange","event","target","placeholder","style","pointerEvents","clearSearch","Loader","TodoModal","modalLoading","selectedUser","handleCloseModal","href","email","name","App","setTodos","useState","pageLoading","setPageLoading","useEffect","todosList","toLowerCase","includes","_Fragment","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.800dc506.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return fetch(fullURL)\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\n\ntype Props = {\n  todos: Todo[];\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n  setSelectedUser: (value: User | null) => void;\n  setModalLoading: (value: boolean) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  setSelectedTodo,\n  setSelectedUser,\n  setModalLoading,\n}) => {\n  const handleOpenModal = (newTodo: Todo) => () => {\n    setModalLoading(true);\n    setSelectedTodo(newTodo);\n    setTimeout(() => {\n      getUser(newTodo.userId).then(setSelectedUser)\n        .finally(() => {\n          setModalLoading(false);\n        });\n    }, 300);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th aria-label=\"Icon\">\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th aria-label=\"Empty\" />\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            key={todo.id}\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo?.id === todo.id,\n            })}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p className={classNames({\n                'has-text-danger': !todo.completed,\n                'has-text-success': todo.completed,\n              })}\n              >\n                {todo.title}\n              </p>\n            </td>\n\n            <td\n              aria-label=\"ModalBtnWrapper\"\n              className=\"has-text-right is-vcentered\"\n            >\n              <button\n                onClick={handleOpenModal(todo)}\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                aria-label=\"ModalBtn\"\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far', {\n                      'fa-eye': selectedTodo?.id !== todo.id,\n                      'fa-eye-slash': selectedTodo?.id === todo.id,\n                    },\n                  )}\n                  />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  filter: Filter,\n  setFilter: (value: Filter) => void,\n  search: string,\n  setSearch: (value: string) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  filter,\n  setFilter,\n  search,\n  setSearch,\n}) => {\n  const handleSetFilter = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setFilter(event.target.value as Filter);\n  };\n\n  const handleSetSearch = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const clearSearch = () => {\n    setSearch('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            value={filter}\n            onChange={handleSetFilter}\n            data-cy=\"statusSelect\"\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          value={search}\n          onChange={handleSetSearch}\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {search && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={clearSearch}\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\n\ntype Props = {\n  modalLoading: boolean;\n  selectedTodo: Todo | null;\n  setSelectedTodo: (value: Todo | null) => void;\n  selectedUser: User | null;\n  setSelectedUser: (value: User | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  modalLoading,\n  selectedTodo,\n  setSelectedTodo,\n  selectedUser,\n  setSelectedUser,\n}) => {\n  const handleCloseModal = () => {\n    setSelectedTodo(null);\n    setSelectedUser(null);\n  };\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {modalLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${selectedTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              onClick={handleCloseModal}\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {selectedTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-success': selectedTodo?.completed,\n                'has-text-danger': !selectedTodo?.completed,\n              })}\n              >\n                {selectedTodo?.completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${selectedUser?.email}`}>\n                {selectedUser?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [filter, setFilter] = useState<Filter>('all');\n  const [pageLoading, setPageLoading] = useState(false);\n  const [modalLoading, setModalLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [selectedUser, setSelectedUser] = useState<User | null>(null);\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setPageLoading(true);\n    getTodos().then(setTodos)\n      .finally(() => setPageLoading(false));\n  }, []);\n\n  useEffect(() => {\n    switch (filter) {\n      case 'active':\n        getTodos()\n          .then(todosList => todosList.filter(todo => !todo.completed\n            && todo.title.toLowerCase().includes(search.toLowerCase())))\n          .then(setTodos);\n        break;\n\n      case 'completed':\n        getTodos()\n          .then(todosList => todosList.filter(todo => todo.completed\n            && todo.title.toLowerCase().includes(search.toLowerCase())))\n          .then(setTodos);\n        break;\n\n      default:\n        getTodos()\n          .then(todosList => todosList.filter(todo => todo.title.toLowerCase().includes(search.toLowerCase())))\n          .then(setTodos);\n    }\n  }, [filter, search]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filter={filter}\n                setFilter={setFilter}\n                search={search}\n                setSearch={setSearch}\n              />\n            </div>\n\n            <div className=\"block\">\n              {pageLoading\n                ? (<Loader />)\n                : (\n                  <TodoList\n                    todos={todos}\n                    selectedTodo={selectedTodo}\n                    setSelectedTodo={setSelectedTodo}\n                    setSelectedUser={setSelectedUser}\n                    setModalLoading={setModalLoading}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          modalLoading={modalLoading}\n          selectedTodo={selectedTodo}\n          setSelectedTodo={setSelectedTodo}\n          selectedUser={selectedUser}\n          setSelectedUser={setSelectedUser}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}